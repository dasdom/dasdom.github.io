I"¿<p>Since I read the first book about [iPhone development](http://www.amazon.com/iPhone-SDK-Application-Development-Applications/dp/0596154054/ref=sr_1_4?s=books&amp;ie=UTF8&amp;qid=1406706339&amp;sr=1-4) I like to do all my layout in code (except for projects at work where other developers started the project with storyboards).</p>
<p>Every year I ask myself if I should give Interface Builder (IB) another chance because I see the advantages in speed when setting up the layout. In addition auto layout debugging is what I miss in code. (No, [exerciseAmbiguityInLayout](https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIView_Class/UIView/UIView.html#//apple_ref/occ/instm/UIView/exerciseAmbiguityInLayout) does not help. Most of the times I tried it, it did nothing.)</p>
<p>And with the changes in Xcode 6 (custom views in IB, setting of custom properties, preview, ...) a lot of my complains about the IB seem to be addressed by Apple. </p>
<p>There is still the context switching, I don't like. But as I heard in a [podcast](https://itunes.apple.com/de/podcast/cocoaradio-06-jonathan-wight/id866902974?i=313477386&amp;l=en&amp;mt=2) recently, there is less context switching when one writes the layout in the xib-storyboard format. This kind of looks like code.</p>
<p>Then I read a [post by Mike Abdullah](http://mikeabdullah.net/thl-ios7-diary-5-table-section-headers.html) and realize that the UI will always have parts which have be done in code. Or maybe not. Apple is obviously pushing towards IB. For example they removed the empty application template in Xcode 6 beta 4.</p>
<p>I'm still not sure about that. I'll try to use the Interface Builder more often and see if it fits my needs.</p>
:ET