I"¨
<p>During the last year I have developed <a href="https://itunes.apple.com/de/app/happy/id556969230?l=en&amp;mt=8">hAppy</a>, a microblogging client for <a href="app.net">App.net</a>. You can create posts for App.net within the client. One thing which bothered me a lot when using the first betas of it was the positioning of the cursor. The solution which is build into iOS, the tiny magnifying glass, is bad. It was cool in 2007. But today there are better solutions.</p>
<p>The solution I use in hAppy is the positioning of the cursor by panning in a field above the keyboard. The used code is quite simple.</p>
<p>I have created a subclass of <code>UITextView</code> and called it <code>DDHTextView</code>. In the initialization of the class (or in <code>awakeFromNib</code> in the case of the use of Interface Builder) the view for the pan gesture is initialized and assigned to the <code>inputAccessoryView</code> of the <code>DDHTextView</code>.</p>
<pre class="lang:objc decode:true ">UIView *inputAccessoryView = [[UIView alloc] initWithFrame:
    CGRectMake(0.0f, 0.0f, [[UIScreen mainScreen] applicationFrame].size.width, 40.0f)];
inputAccessoryView.backgroundColor = [UIColor colorWithWhite:0.90f alpha:1.0f];
        
self.inputAccessoryView = inputAccessoryView;</pre>
<p>Then the gesture recognizer are attached to the <code>inputAccessoryView</code>.</p>
<pre class="lang:objc decode:true ">_singleFingerPanRecognizer = [[UIPanGestureRecognizer alloc] initWithTarget:self 
                                                                     action:@selector(singleFingerPanHappend:)];
_singleFingerPanRecognizer.maximumNumberOfTouches = 1;
[inputAccessoryView addGestureRecognizer:_singleFingerPanRecognizer];</pre>
<p>The last thing we need to do is to react on the pan gesture.</p>
<pre class="lang:objc decode:true ">- (void)singleFingerPanHappend:(UIPanGestureRecognizer*)sender {
    if (sender.state == UIGestureRecognizerStateBegan) {
        self.startRange = self.selectedRange;
    }
    
    CGPoint translation = [sender translationInView:self];
    CGFloat cursorLocation = MAX(self.startRange.location+(NSInteger)(translation.x*DDHCursorVelocity), 0);
    NSRange selectedRange = {cursorLocation, 0};
    self.selectedRange = selectedRange;
}</pre>
<p>In addition I have added a few other gesture recognizer for selecting text or moving the cursor fast to the beginning or end of the text. You can get <code>DDHTextView</code> on my <a href="https://github.com/dasdom/DDHTextView">github page</a> or on <a href="https://www.cocoacontrols.com/controls/ddhtextview">cocoacontrols.com</a>.</p>
<p>If you have any comments about this post? I am <a href="https://alpha.app.net/dasdom">@dasdom</a>.</p>
:ET