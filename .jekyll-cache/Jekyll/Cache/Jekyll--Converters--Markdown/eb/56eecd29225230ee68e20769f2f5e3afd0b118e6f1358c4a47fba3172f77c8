I"Ó	<p>[AppCode](http://www.jetbrains.com/objc/) is an Objective-C IDE which is used by a lot of iOS developer. I've tried to use and like it but I didn't succeed. My reasons not to use AppCode are</p>
<p>### 1 Energy</p>
<p>When ever I used AppCode it showed up immediately in the battery menu: "App Using Significant Energy". Sure, most of the time this isn't a problem (if one neglects the influence on the environment) because where I work there is normally a power source I can use. But I don't like to switch IDEs. I try to learn one IDE and stick to it. Therefore sometimes I need to have to work without accessible power source. In this case I would have to switch to Xcode because of energy consumption. This would mean to learn two sets of short cuts or to change nearly all the short cuts in AppCode.</p>
<p>### 2 Knowledge is my resource</p>
<p>I heard in a [German podcast](http://uisprech.de) that people using AppCode begin to not care about how the frameworks and APIs Apple provid look like because the IDE is smart enough to figure all that out. This sounds like an advantage but for me it isn't. I get hired because of my knowledge of Objecive-C and especially Cocoa Touch. This means I have to use the frameworks and practice every day to remember how everything fits together. Sure, using a clever IDE helps you to get an overview of how everything fits together, but I think one starts to forget the basics.<br />
What if I apply for a job and get asked about my favorite framework (this already happened to me in an interview)? Or when a colleague asks me if I could help her with a bad bug. Chances are that she is using Xcode.</p>
<p>### 3 Learning curve</p>
<p>Getting to know AppCode is a lot of work. I tried to use it for several hours and it didn't feel right. I was lost most of the time.</p>
<p>### 4 Coding style</p>
<p>More often than not I have a general idea how the architecture of the App will look like. AppCode helps you not to think and care about before you code because it very powerful in adding code when need. Let's say you use a class before you have defined it. Xcode will complain. AppCode will suggest to add this class for you. I think I would get used to it and would start not to think about be code before I start.</p>
<p>### 5 The Looks</p>
<p>Let's face it: AppCode doesn't look like a Mac App. In fact it's kind of ugly. This is the weakest point. I think one gets use to it.</p>
<p>What do you think? Let me know at [@dasdom](https://alpha.app.net/dasdom).</p>
:ET