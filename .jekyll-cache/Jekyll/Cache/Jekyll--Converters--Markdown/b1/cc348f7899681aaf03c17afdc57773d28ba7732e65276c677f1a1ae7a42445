I"u<p>Recently I took the regex course at <a href="https://www.executeprogram.com/">executeprogram.com</a>. Awesome stuff.</p>

<p>As you know, as soon as you have a slight idea what regex is, you try to use it everywhere. Yesterday I needed to change all strings of double values in a JSON into double values. For example I wanted to replace <code class="highlighter-rouge">"1.23"</code> with <code class="highlighter-rouge">1.23</code>.</p>

<h1 id="regex-without-the-dw">Regex without the <code class="highlighter-rouge">\d+.*?\w</code></h1>

<p>If you don’t know regular expressions but still need more than just replace a simple string with another simple string, Xcode has you covered.</p>

<p>As an example lets say we’d like to change all the properties in the following struct into optionals:</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="kd">struct</span> <span class="kt">ChemElement</span> <span class="p">:</span> <span class="kt">Codable</span><span class="p">,</span> <span class="kt">Equatable</span> <span class="p">{</span>
  <span class="k">let</span> <span class="nv">abbreviation</span><span class="p">:</span> <span class="kt">String</span>
  <span class="k">let</span> <span class="nv">atomMass</span><span class="p">:</span> <span class="kt">Double</span>
  <span class="k">let</span> <span class="nv">electronConfiguration</span><span class="p">:</span> <span class="kt">String</span>
  <span class="k">let</span> <span class="nv">group</span><span class="p">:</span> <span class="kt">String</span>
  <span class="k">let</span> <span class="nv">name</span><span class="p">:</span> <span class="kt">String</span>
  <span class="k">let</span> <span class="nv">ordinal</span><span class="p">:</span> <span class="kt">Int</span>
  <span class="k">let</span> <span class="nv">period</span><span class="p">:</span> <span class="kt">Int</span>
  <span class="k">let</span> <span class="nv">yPos</span><span class="p">:</span> <span class="kt">Int</span>
  <span class="k">let</span> <span class="nv">title</span><span class="p">:</span> <span class="kt">String</span>
  <span class="k">let</span> <span class="nv">pauling</span><span class="p">:</span> <span class="kt">String</span>
  <span class="k">let</span> <span class="nv">mostImportantRadioactiveIsotope</span><span class="p">:</span> <span class="kt">Int</span>
  <span class="k">let</span> <span class="nv">decayType</span><span class="p">:</span> <span class="kt">String</span>
  <span class="k">let</span> <span class="nv">lifetime</span><span class="p">:</span> <span class="kt">String</span>
  <span class="k">let</span> <span class="nv">phaseNorm</span><span class="p">:</span> <span class="kt">String</span>
  <span class="k">let</span> <span class="nv">crystalStructure</span><span class="p">:</span> <span class="kt">String</span>
<span class="p">}</span></code></pre></figure>

<p>(Please don’t judge this code. I’m still refactoring. ;) )</p>

<p>We activate search with ⌘-f. In the search bar is a plus sign. When you click it, you can select different elements to search for. The patterns we need is <code class="highlighter-rouge">let Word: Word</code>. The matching substrings are highlighted in the editor:</p>

<p style="text-align: center;"><img src="../assets/2019-08-25/search-result-without-regex.png" alt="" /></p>

<p>If you look closely you can see there is a small number next to the pattern elements:</p>

<p style="text-align: center;"><img src="../assets/2019-08-25/search-result-without-regex-detail.png" alt="" /></p>

<p>In the <code class="highlighter-rouge">Replace</code> text field you can refer to the different matches using a <code class="highlighter-rouge">$</code> sign and the number next to the pattern part like this: <code class="highlighter-rouge">var $1: $2?</code>. In Xcode this looks like this:</p>

<p style="text-align: center;"><img src="../assets/2019-08-25/search-result-without-regex-detail-replace.png" alt="" /></p>

<p>When we now click the <code class="highlighter-rouge">All</code> button, all the properties are changed into optional properties:</p>

<figure class="highlight"><pre><code class="language-swift" data-lang="swift"><span class="kd">struct</span> <span class="kt">ChemElement</span> <span class="p">:</span> <span class="kt">Codable</span><span class="p">,</span> <span class="kt">Equatable</span> <span class="p">{</span>
  <span class="k">var</span> <span class="nv">abbreviation</span><span class="p">:</span> <span class="kt">String</span><span class="p">?</span>
  <span class="k">var</span> <span class="nv">atomMass</span><span class="p">:</span> <span class="kt">Double</span><span class="p">?</span>
  <span class="k">var</span> <span class="nv">chemieBool</span><span class="p">:</span> <span class="kt">Bool</span><span class="p">?</span>
  <span class="k">var</span> <span class="nv">electronConfiguration</span><span class="p">:</span> <span class="kt">String</span><span class="p">?</span>
  <span class="k">var</span> <span class="nv">group</span><span class="p">:</span> <span class="kt">String</span><span class="p">?</span>
  <span class="k">var</span> <span class="nv">name</span><span class="p">:</span> <span class="kt">String</span><span class="p">?</span>
  <span class="k">var</span> <span class="nv">ordinal</span><span class="p">:</span> <span class="kt">Int</span><span class="p">?</span>
  <span class="k">var</span> <span class="nv">period</span><span class="p">:</span> <span class="kt">Int</span><span class="p">?</span>
  <span class="k">var</span> <span class="nv">yPos</span><span class="p">:</span> <span class="kt">Int</span><span class="p">?</span>
  <span class="k">var</span> <span class="nv">title</span><span class="p">:</span> <span class="kt">String</span><span class="p">?</span>
  <span class="k">var</span> <span class="nv">pauling</span><span class="p">:</span> <span class="kt">String</span><span class="p">?</span>
  <span class="k">var</span> <span class="nv">mostImportantRadioactiveIsotope</span><span class="p">:</span> <span class="kt">Int</span><span class="p">?</span>
  <span class="k">var</span> <span class="nv">decayType</span><span class="p">:</span> <span class="kt">String</span><span class="p">?</span>
  <span class="k">var</span> <span class="nv">lifetime</span><span class="p">:</span> <span class="kt">String</span><span class="p">?</span>
  <span class="k">var</span> <span class="nv">phaseNorm</span><span class="p">:</span> <span class="kt">String</span><span class="p">?</span>
  <span class="k">var</span> <span class="nv">crystalStructure</span><span class="p">:</span> <span class="kt">String</span><span class="p">?</span>
<span class="p">}</span></code></pre></figure>

<h1 id="search-using-regular-expressions">Search using regular expressions</h1>

<p>If you know regular expressions you can activate it in search by clicking the drop down that shows <code class="highlighter-rouge">Contains</code> and change it into <code class="highlighter-rouge">Regular Expression</code>:</p>

<p style="text-align: center;"><img src="../assets/2019-08-25/activate-regular-expression-in-search.png" alt="" /></p>

<p>Than you can use regular expressions when searching:</p>

<p style="text-align: center;"><img src="../assets/2019-08-25/search-with-regex.png" alt="" /></p>

<p>But if you’d like to use matches in <code class="highlighter-rouge">Replace</code> like you did above you need to add parentheses like this:</p>

<p style="text-align: center;"><img src="../assets/2019-08-25/search-and-replace-with-regex.png" alt="" /></p>

<p><strong>Thanks for reading!</strong></p>

<p>If you have comments about this or in case I missed something, you can find me on <a href="https://twitter.com/dasdom">Twitter</a>.</p>
:ET